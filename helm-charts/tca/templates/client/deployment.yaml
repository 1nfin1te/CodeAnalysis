apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    k8s-app: {{ template "tca.fullname" . }}-client
    app: {{ template "tca.name" . }}
    chart: {{ template "tca.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "tca.fullname" . }}-client
spec:
  serviceName: ""
  selector:
    matchLabels:
      k8s-app: {{ template "tca.fullname" . }}-client
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        k8s-app: {{ template "tca.fullname" . }}-client
        release: {{ .Release.Name }}
    spec:
      shareProcessNamespace: true
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.tca.podAntiAffinity.enable }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ .Values.tca.podAntiAffinity.topologyKey }}"
                labelSelector:
                  matchLabels:
                    k8s-app: {{ template "tca.fullname" . }}-client
                    release: {{ .Release.Name }}
      {{- end }}
      containers:
        - name: {{ template "tca.fullname" . }}-client
          image: "{{ .Values.tca.client.image.repository }}:{{ .Values.tca.client.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          command: ["python3"]
          args: ["codepuppy.py", "start", "-t", "$(CODEDOG_TOKEN)", "--create-from", "docker", "--tag", "CodeDog_Linux"]
          envFrom:
            - configMapRef:
                name: client-env
          env:
            - name: _HASH_ENV_
              value: {{ include (print $.Template.BasePath "/client/configmap-env.yaml") . | sha256sum }}
            - name: _HASH_CONFIG_
              value: {{ include (print $.Template.BasePath "/client/configmap-conf.yaml") . | sha256sum }}
          lifecycle:
            preStop:
              exec:
                command:
                  - sleep
                  - '20' 
          resources:
{{ toYaml .Values.tca.client.resources | indent 12 }}
          volumeMounts:
            - mountPath: /workspace/client/config.ini
              subPath: config.ini
              name: client-config-conf
      volumes:
        - configMap:
            items:
              - key: config.ini
                mode: 420
                path: config.ini
            name: {{ template "tca.fullname" . }}-client-config
          name: client-config-conf
---
{{- if .Values.tca.client.autoscaling.enabled }}
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "tca.fullname" . }}-client
  labels:
    k8s-app: {{ template "tca.fullname" . }}-client
    app: {{ template "tca.name" . }}
    chart: {{ template "tca.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: {{ template "tca.fullname" . }}-client
  minReplicas: {{ .Values.tca.client.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.tca.client.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.tca.client.autoscaling.targetMemory }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.tca.client.autoscaling.targetMemory }}
    {{- end }}
    {{- if .Values.tca.client.autoscaling.targetCPU }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.tca.client.autoscaling.targetCPU }}
    {{- end }}
{{- end }}
